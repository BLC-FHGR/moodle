<?php

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * An oauth2 redirection endpoint which can be used for an application:
 * http://tools.ietf.org/html/draft-ietf-oauth-v2-26#section-3.1.2
 *
 * This is used because some oauth servers will not allow a redirect urls
 * with get params (like repository callback) and that needs to be called
 * using the state param.
 *
 * @package    core
 * @copyright  2012 Dan Poltawski
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

require_once(__DIR__ . '/../config.php');

$error = optional_param('error', '', PARAM_RAW);
if ($error) {
    $message = optional_param('error_description', '', PARAM_RAW);
    if ($message) {
        print_error($message);
    } else {
        print_error($error);
    }
    die();
}

// The authorization code generated by the authorization server.
// For this patch there will be incoming assertion from the App
// The state parameter we've given (used in moodle as a redirect url).
$state = optional_param('state', NULL, PARAM_LOCALURL); //need to be optional
$type = optional_param('grant_type', NULL, PARAM_RAW);

if (isset($state)) {
    // 1st case normal OAuth flow

    //Authorization Code is required for this flow
    $code = required_param('code', PARAM_RAW);

    $redirecturl = new moodle_url($state);
    $params = $redirecturl->params();

    if (isset($code) and isset($params['sesskey']) and confirm_sesskey($params['sesskey'])) {
        $redirecturl->param('oauth2code', $code);
        redirect($redirecturl);
    } else {
        print_error('invalidsesskey');
    }
} else if (isset($type) && $type === 'urn:ietf:params:oauth:grant-type:jwt-bearer') {
    // 2nd case RFC 7521 + 23 handling assertion from App
    $assertion = required_param('assertion', PARAM_RAW);

    $root = $CFG->wwwroot;
    $redirecturl = new moodle_url($root . '/auth/oauth2/login.php');
    $redirecturl->params(['oauth2grant_type' => $type, 'assertion' => $assertion]);
    redirect($redirecturl);

} else {
    print_error('error');
}
